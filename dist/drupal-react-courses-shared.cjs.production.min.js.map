{"version":3,"file":"drupal-react-courses-shared.cjs.production.min.js","sources":["../src/components/Loader.tsx","../src/components/Wrapper.tsx","../src/components/CourseField.tsx","../src/components/MeetingDetails.tsx","../src/components/Filter.tsx","../src/components/FilterWrapper.tsx","../src/constants.ts"],"sourcesContent":["import styled from \"styled-components\";\nimport { Loader as BrownLoader } from \"brown-university-components\";\nimport { colors } from \"brown-university-styles\";\n\nconst Loader = styled(BrownLoader)`\n  text-align: center;\n\n  #cover {\n    stroke: ${colors.white};\n  }\n`;\n\nexport default Loader;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  animation: 750ms ease fadeInUp;\n\n  @keyframes fadeInUp {\n    0% {\n      opacity: 0;\n      transform: translateY(0.75rem);\n    }\n    100% {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React from \"react\";\n\ntype CourseFieldProps = {\n  label?: string;\n  href?: string;\n  value?: string;\n  defaultValue?: string;\n};\n\nconst CourseField = ({\n  label,\n  href,\n  value,\n  defaultValue = \"\"\n}: CourseFieldProps) => (\n  <div className=\"course_item_row\">\n    {label && <span className=\"course_item_row_label\">{label}: </span>}\n    <span className=\"course_item_row_content\">\n      {href && value ? (\n        <a\n          href={href}\n          className=\"course_item_row_content\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {value}\n        </a>\n      ) : (\n        value || defaultValue\n      )}\n    </span>\n  </div>\n);\n\nexport default CourseField;\n","import React from \"react\";\nimport moment from \"moment\";\nimport CourseField from \"./CourseField\";\n\nconst formatDate = (date: string) =>\n  moment(date, \"YYYY-MM-DD\").format(\"MMM D, YYYY\");\n\ntype Meeting = {\n  buildingDescription?: string;\n  roomCode?: string;\n  startTime?: string;\n  endTime?: string;\n  daysToMeet?: string;\n  startDate?: string;\n  endDate?: string;\n};\n\nconst formatMeeting = (meeting: Meeting) => {\n  const {\n    buildingDescription,\n    roomCode,\n    startTime,\n    endTime,\n    daysToMeet,\n    startDate,\n    endDate\n  } = meeting;\n\n  const weekdays: Record<string, string> = {\n    U: \"Sun\",\n    M: \"Mon\",\n    T: \"Tue\",\n    W: \"Wed\",\n    R: \"Thu\",\n    F: \"Fri\",\n    S: \"Sat\"\n  };\n\n  const location = `${buildingDescription || \"\"} ${roomCode || \"\"}`;\n  const times = startTime && endTime ? `${startTime} - ${endTime}` : \"\";\n\n  const days = daysToMeet\n    ? daysToMeet\n        .split(\"\")\n        .map(day => weekdays[day])\n        .join(\", \")\n    : \"\";\n\n  const dates =\n    startDate && endDate\n      ? `from ${formatDate(startDate)} to ${formatDate(endDate)}`\n      : \"\";\n\n  return `${location} ${times} ${days} - ${dates}`;\n};\n\nconst MeetingDetails = ({ meetings }: { meetings: Meeting[] }) =>\n  meetings.length > 0 ? (\n    <>\n      {meetings.map((m, i) => (\n        <CourseField\n          label={i === 0 ? \"Meetings\" : undefined}\n          key={`${m.startDate}-${m.daysToMeet}-${m.startTime}`}\n          value={formatMeeting(m)}\n        />\n      ))}\n    </>\n  ) : (\n    <CourseField label=\"Meetings\" value=\"Meeting Details Not Available.\" />\n  );\n\nexport default MeetingDetails;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { ChevronDownSVG } from \"brown-university-components\";\n\nconst Filter = ({ data }: { data: Record<string, string> }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const renderFilter = (label: string, code: string) => (\n    <li className=\"sub_nav_item\" key={label}>\n      <NavLink\n        exact\n        to={`/${code}`}\n        className=\"sub_nav_link sub_nav_link_label\"\n        data-testid={`${code}-filter`}\n        activeStyle={{ color: \"#C00404\" }}\n      >\n        {label}\n      </NavLink>\n    </li>\n  );\n\n  return (\n    <nav\n      className=\"sub_nav\"\n      aria-label=\"Courses\"\n      itemType=\"http://schema.org/SiteNavigationElement\"\n    >\n      <div className=\"sub_nav_header\">\n        <h2 className=\"sub_nav_title\">Courses</h2>\n        <button\n          className={`sub_nav_handle ${isExpanded ? \"fs-swap-active\" : \"\"}`}\n          type=\"button\"\n          onClick={() => setIsExpanded(!isExpanded)}\n        >\n          <span className=\"sub_nav_handle_icon\">\n            <svg className=\"icon icon_chevron_down\">\n              <ChevronDownSVG />\n            </svg>\n          </span>\n          <span className=\"sub_nav_handle_label\">\n            {isExpanded ? \"Close\" : \"In This Section\"}\n          </span>\n        </button>\n      </div>\n      <ul\n        className={`sub_nav_list ${isExpanded ? \"fs-swap-active\" : \"\"}`}\n        aria-label=\"Courses\"\n        aria-hidden=\"false\"\n      >\n        {renderFilter(\"All Courses\", \"\")}\n        {Object.entries(data).map(([code, description]) =>\n          renderFilter(description, code)\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Filter;\n","import ReactDOM from \"react-dom\";\nimport { ReactNode } from \"react\";\n\nconst FilterWrapper = ({ children }: { children: ReactNode }) =>\n  process.env.NODE_ENV !== \"production\"\n    ? children\n    : ReactDOM.createPortal(\n        children,\n        document.getElementsByClassName(\"page_sub_nav\")[0]\n      );\n\nexport default FilterWrapper;\n","export const URLS = {\n  qa: \"https://webservices-proxy.cis-qas.brown.edu\",\n  prod: \"https://webservices-proxy.brown.edu\"\n};\n"],"names":["Loader","styled","BrownLoader","colors","white","Wrapper","div","CourseField","label","href","value","defaultValue","React","className","target","rel","formatDate","date","moment","format","data","useState","isExpanded","setIsExpanded","renderFilter","code","key","NavLink","exact","to","activeStyle","color","itemType","type","onClick","ChevronDownSVG","Object","entries","map","ReactDOM","createPortal","children","document","getElementsByClassName","meetings","length","m","i","undefined","startDate","daysToMeet","startTime","meeting","endTime","endDate","weekdays","U","M","T","W","R","F","S","buildingDescription","roomCode","split","day","join","qa","prod"],"mappings":"mhBAIA,IAAMA,EAASC,EAAOC,SAAPD,KAIDE,SAAOC,6RCNfC,EAAUJ,EAAOK,SCOjBC,EAAc,gBAClBC,IAAAA,MACAC,IAAAA,KACAC,IAAAA,UACAC,aAAAA,aAAe,YAEfC,uBAAKC,UAAU,mBACZL,GAASI,wBAAMC,UAAU,yBAAyBL,QACnDI,wBAAMC,UAAU,2BACbJ,GAAQC,EACPE,qBACEH,KAAMA,EACNI,UAAU,0BACVC,OAAO,SACPC,IAAI,uBAEHL,GAGHA,GAASC,KCxBXK,EAAa,SAACC,UAClBC,EAAOD,EAAM,cAAcE,OAAO,qDCDrB,gBAAGC,IAAAA,OACoBC,YAAS,GAAtCC,OAAYC,OAEbC,EAAe,SAAChB,EAAeiB,UACnCb,sBAAIC,UAAU,eAAea,IAAKlB,GAChCI,gBAACe,WACCC,SACAC,OAAQJ,EACRZ,UAAU,gDACMY,YAChBK,YAAa,CAAEC,MAAO,YAErBvB,YAMLI,uBACEC,UAAU,uBACC,UACXmB,SAAS,2CAETpB,uBAAKC,UAAU,kBACbD,sBAAIC,UAAU,4BACdD,0BACEC,6BAA6BS,EAAa,iBAAmB,IAC7DW,KAAK,SACLC,QAAS,kBAAMX,GAAeD,KAE9BV,wBAAMC,UAAU,uBACdD,uBAAKC,UAAU,0BACbD,gBAACuB,yBAGLvB,wBAAMC,UAAU,wBACbS,EAAa,QAAU,qBAI9BV,sBACEC,2BAA2BS,EAAa,iBAAmB,iBAChD,wBACC,SAEXE,EAAa,cAAe,IAC5BY,OAAOC,QAAQjB,GAAMkB,KAAI,mBACxBd,yCChDY,mBAGhBe,EAASC,eAHUC,SAKjBC,SAASC,uBAAuB,gBAAgB,6CFgDjC,gBAAGC,IAAAA,gBACxBA,EAASC,OAAS,EAChBjC,gCACGgC,EAASN,KAAI,SAACQ,EAAGC,UAChBnC,gBAACL,GACCC,MAAa,IAANuC,EAAU,gBAAaC,EAC9BtB,IAAQoB,EAAEG,cAAaH,EAAEI,eAAcJ,EAAEK,UACzCzC,OA9Ca0C,EA8CQN,EA1C3BK,EAKEC,EALFD,UACAE,EAIED,EAJFC,QACAH,EAGEE,EAHFF,WACAD,EAEEG,EAFFH,UACAK,EACEF,EADFE,QAGIC,EAAmC,CACvCC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,QATDV,EAPFW,qBAmByC,SAZvCX,EANFY,UAkB2D,SAC/Cb,GAAaE,EAAaF,QAAeE,EAAY,SAEtDH,EACTA,EACGe,MAAM,IACN3B,KAAI,SAAA4B,UAAOX,EAASW,MACpBC,KAAK,MACR,WAGFlB,GAAaK,UACDtC,EAAWiC,UAAiBjC,EAAWsC,GAC/C,OAlCc,IAACF,EAInBD,EACAE,EACAH,EACAD,EACAK,EAGIC,MAwCJ3C,gBAACL,GAAYC,MAAM,WAAWE,MAAM,iDGpEpB,CAClB0D,GAAI,8CACJC,KAAM"}